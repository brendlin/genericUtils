#!/bin/bash

# If not running interactively, don't do anything
[ ! -t 0 ] && return

todo () {
    python ~/Documents/todo/todo.py $1
}

myhost () { 
    hostname|awk -F. '{print $1}' 
}

#returns the last 2 fields of the working directory
pwdtail () {
    pwd|awk -F/ '{nlast = NF -1;print $nlast"/"$NF}'
}

isdq2 () { 
    [ -n "$DQ2_HOME" ] && echo "[*]" 
}

isScreen () {
    [ $TERM = "screen" ] && echo "[S]"
}

workflow () {
    if [ "$mydir" = "" ] || [ "$workflow" = "" ] ; then
        echo Warning - mydir or workflow environment variable not set.
        exit 1;
    fi
    if [ ! -d "$workflow" ]; then
        echo "$workflow" does not exist. making it.
        mkdir $workflow
    else
        echo "$workflow" exists.
    fi
    cd $workflow
}

getps1 (){
    case $HOSTNAME in 
        (*.hep.upenn.edu) echo '['${USER}'.'`myhost`']['`pwdtail`']'`isdq2``isScreen` ;;
        (lxplus*)         echo '['${USER}'.'`myhost`']['`pwdtail`']'`isdq2``isScreen` ;;
        (*.desy.de)       echo '['${USER}'.'`myhost`']['`pwdtail`']'`isdq2``isScreen` ;;
        #(Macintosh.local | macintosh.* | pb-d-*) 
        (*)               echo '['${USER:0:4}']['`pwdtail`']'`isScreen` ;;
    esac
}
PS1='`getps1` '

# Larger Bash History
HISTFILESIZE=5000

# This is to turn on i-search (in conjunction with reverse-i-search)
stty -ixon

# Python
export PYTHONSTARTUP=~/.pystartup

export SVN_EDITOR=vim
export EMAIL_RECIPIENT=kurt.brendlinger@gmail.com
export RUCIO_ACCOUNT=brendlin
export nickname=brendlin
export pennsvn=svn+ssh://brendlin@svn.cern.ch/reps/penn/
export svnatlasoff=svn+ssh://brendlin@svn.cern.ch/reps/atlasoff/
export genericUtils=$HOME/genericUtils
export PYTHONPATH=$PYTHONPATH:$genericUtils/python #add generic python utilities to path
export PATH=$PATH:$genericUtils/macros # add plot script to python path

alias 'nemacs=emacs -nw'
alias 'asdf=%emacs'
alias 'sdfg=root -l *.root'
alias 'keepmealive=xterm -name "$USER" -e sh ~brendlin/public/eauxvives.sh &'
alias 'launchTMVA=root -l $ROOTSYS/tmva/test/TMVAGui.C'
alias 'kpbook=pbook -c "sync()" && pbook -c "show()" | grep -e JobsetID -e failed -e running -e activated -e merging -e lastUpdate >& /tmp/kpbook.txt && grep -B 2 failed /tmp/kpbook.txt'
alias "rchaddrm=for i in \$(ls | grep '\-0.root'); do hadd -f \${i/-0.root/.root} \${i/-0.root/-\*.root} && rm \${i/-0.root/-\*.root}; done"
alias "rchadd=for i in \$(ls | grep '\-0.root'); do hadd -f \${i/-0.root/.root} \${i/-0.root/-\*.root}; done"
alias 'voms=voms-proxy-init -voms atlas:/atlas/de --valid 96:00'

killpy () {
    thiswindow=$(tty | sed -e "s:/dev/::")
    echo $thiswindow
    ps | grep $thiswindow | grep python | grep -v "grep python" | awk '{print $1}' | xargs kill -9
}

killsh () {
    thiswindow=$(tty | sed -e "s:/dev/::")
    echo $thiswindow
    ps | grep $thiswindow | grep ssh | grep -v "grep ssh" | awk '{print $1}' | xargs kill -9
}

gitit () {
    eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_rsa_github
}

cern () {
    kinit brendlin@CERN.CH ;
    # aklog
}

setupdq2() {
    source ${ATLAS_LOCAL_ROOT_BASE}/packageSetups/atlasLocalDQ2ClientSetup.sh --dq2ClientVersion ${dq2ClientVersionVal} --quiet
    source ${ATLAS_LOCAL_ROOT_BASE}/packageSetups/atlasLocalPandaClientSetup.sh --pandaClientVersion ${pandaClientVersionVal} currentJedi --noAthenaCheck
}

##
## BASIC LOGIN
##
case $HOSTNAME in

    (*.hep.upenn.edu)
    echo setting up atlas
    export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    alias 'setupATLAS=source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    # setupATLAS below:
    source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh
    alias r=localSetupROOT
    alias xrdls='xrd hn.at3f dirlist '
    #
    export xrdprefix=root://hn.at3f///srm/
    export mybase=/home/kurb/
    export mydir=/disk/userdata00/atlas_data2/kurb
    export mi=$mydir/2013/
    export pennweb=/home/u2/kurb/html/
    echo done
    alias duls='du -sk * | sort -nr | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e "${size}${unit}\t${fname}"; break; fi; size=$((size/1024)); done; done'
    ;;



    (lxplus*)
    # EOS mounting
    echo mounting eos.
    source /afs/cern.ch/project/eos/installation/pro/etc/setup.sh
    echo eosmount eos # this mounts eos to ~/eos so you can use it like a regular file system.
    echo eos is NOT mounted.
    # PyAMI
    source /afs/cern.ch/atlas/software/tools/pyAMI/setup.sh
    export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    alias 'setupATLAS=source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    # setupATLAS below:
    echo Setting up ATLAS...
    source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh
    echo ATLAS is set up.
    source ${ATLAS_LOCAL_ROOT_BASE}/utilities/oldAliasSetup.sh root
    echo ROOT is set up.
    alias r=localSetupROOT
    #
    # this is for that crappy ansys thing.
    . /afs/cern.ch/project/parc/env/parc_apps.sh
    #
    export mydir=/afs/cern.ch/work/b/brendlin
    export brendlin=/afs/cern.ch/user/b/brendlin
    export trt=/afs/cern.ch/atlas/calib/id/calib_1/TRTAlignment/
    export atlidali=/afs/cern.ch/user/a/atlidali/w1/users/brendlin/testarea/16.6.4.3/
    export public=/afs/cern.ch/user/b/brendlin/public
    export scratch=/afs/cern.ch/user/b/brendlin/scratch0
    #
    alias 'bjobs=bjobs -w'
    alias 'bjbos=bjobs -w'
    alias 'bjosb=bjobs -w'
    alias 'bq=bqueues -u '$USER
    export workflow="$mydir/lsync/$(date -d "$(( $(date +%u) - 1 )) days ago" +%y%m%d_w%V)"
    ;;



    (nafhh-*.desy.de)
    echo setting up atlas
    export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    alias 'setupATLAS=source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    # setupATLAS below:
    source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh    
    source ${ATLAS_LOCAL_ROOT_BASE}/utilities/oldAliasSetup.sh root
    export DQ2_LOCAL_SITE_ID=DESY-HH_SCRATCHDISK
    export mydir=/nfs/dust/atlas/user/brendlik
    # set up BIRD system
    echo 'setting up bird (SGE)'
    source /usr/sge/default/common/settings.sh
    export workflow="$mydir/dsync/$(date -d "$(( $(date +%u) - 1 )) days ago" +%y%m%d_w%V)"
    ;;
    


    #(Macintosh.local | macintosh.* | pb-d-*)
    (*) # everything else (local machine, etc)
    #source /Developer/CMT/v1r20p20090520/mgr/setup.sh
    cd ~/root
    . bin/thisroot.sh;
    cd -;
    echo Setting up ROOT branch v5-34-25... done.
    # add boost libraries to library paths
    # not needed so far # export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/Users/brendlin/boost_1_61_0/stage/lib
    # not needed so far # export LIBPATH=$LIBPATH:/Users/brendlin/boost_1_61_0/stage/lib
    export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/Users/brendlin/boost_1_61_0/stage/lib
    # AnalysisBase asks for these:
    export BOOSTLIBDIR=/Users/brendlin/boost_1_61_0/stage/lib
    export BOOSTINCDIR=/Users/brendlin/boost_1_61_0/stage/
    # Included because of "use quotes instead of angles" issue - see https://root.cern.ch/phpBB3/viewtopic.php?t=20306
    export CPLUS_INCLUDE_PATH=""
    # MacPorts Installer addition on 2010-11-10_at_17:10:09: adding an appropriate PATH variable for use with MacPorts.
    export PATH=/opt/local/bin:/opt/local/sbin:$PATH
    # Finished adapting your PATH environment variable for use with MacPorts.
    #. /sw/bin/init.sh
    #echo Setting up Fink... done.
    #echo adding myscripts
    export PATH=$PATH:/bin/myscripts
    # adding to python path
    export brendlin=~/Documents/pennHighEnergy
    export mydir=~/Documents/desyHEP
    # aliases
    export ppc=~/Documents/pennHighEnergy/talks/130708_PPC_HiggsTalk/proceedings/aipproc_8s
    alias 'textedit=/Applications/TextEdit.app/Contents/MacOS/TextEdit'
    alias 'lxplusrand=caffeinate -i ssh -Y brendlin@lxplus.cern.ch'
    # slc6
    # Pick the LAST lxplus machine in this list, and save the previous ones.:
    # for i in {1..999}; do ping -c 1 lxplus$(printf "%03d" $i).cern.ch>/dev/null && echo lxplus$(printf "%03d" $i).cern.ch exists; done;
    alias 'lxplus=caffeinate -i ssh -Y brendlin@lxplus136.cern.ch'
    alias 'tier3screen=caffeinate -i ssh -Y kurb@at3i00.hep.upenn.edu'
    alias 'dsync=rsync -r brendlik@naf-atlas.desy.de:/nfs/dust/atlas/user/brendlik/dsync ~/Documents/desyHEP'
    alias 'lsync=rsync -r brendlin@lxplus.cern.ch:/afs/cern.ch/work/b/brendlin/lsync ~/Documents/desyHEP'

    alias 'higgs=caffeinate -i ssh -Y kurb@higgs.hep.upenn.edu'
    alias 'dionysus=caffeinate -i ssh -Y kurb@dionysus.hep.upenn.edu'
    export pennscp=kurb@at3i00.hep.upenn.edu
    export desyscp=brendlik@naf-atlas.desy.de

    alias 'atlasgw=caffeinate -i ssh -Y brendlin@atlasgw.cern.ch'
    alias 'atlidali=caffeinate -i ssh -Y atlidali@lxplus415.cern.ch'
    alias 'tier3=caffeinate -i ssh -Y kurb@at3i00.hep.upenn.edu'
    alias 'tier6=caffeinate -i ssh -Y kurb@at3f00.hep.upenn.edu'
    alias 'desy=caffeinate -i ssh -Y brendlik@bastion.desy.de'
    alias 'dnaf=caffeinate -i ssh -Y brendlik@nafhh-atlas01.desy.de'
    alias 'dnafrand=caffeinate -i ssh -Y brendlik@naf-atlas.desy.de'
    alias 'cdpenn=cd Documents/PennHighEnergy/'
    alias 'whoareyou=echo No more questions.'
    alias 'usa=ssh -D 8080 kurb@at3i00.hep.upenn.edu'
    alias 'usa_heph=ssh -D 8080 kurb@hephaestus.hep.upenn.edu'
    alias 'usatwo=ssh -D 8080 kurb@nereus.hep.upenn.edu'
    alias 'taneycat=caffeinate -i ssh -Y taneycat@69.242.1.96'
    alias 'torrent=ssh -L 9091:localhost:9091 taneycat@69.242.1.96'
    alias 'fixaudio=sudo killall coreaudiod'
    #
    export alignment=~/Documents/pennHighEnergy/alignment/
    export egamma=~/Documents/pennHighEnergy/egamma/
    export ecore=/home/kurb/testarea/17.7.0/egammaCore/
    export eframe=/home/kurb/testarea/17.7.0/egammaFrame/
    export utilities=$brendlin/genericUtils/
    export egammaframe=$brendlin/egammaFrame/
    export egammacore=$brendlin/egammaCore/
    export penn=kurb@at3i00.hep.upenn.edu
    #
    export pennsvn=svn+ssh://brendlin@svn.cern.ch/reps/penn
    export svnatlasoff=svn+ssh://brendlin@svn.cern.ch/reps/atlasoff
    #
    export scpbrendlin=brendlin@lxplus.cern.ch:/
    export scpatlidali=atlidali@lxplus.cern.ch:/
    export workflow="$mydir/$(date -v -$(( $(date +%u) - 1 ))d +%y%m%d_w%V)"
    export lorkflow="$mydir/lsync/$(date -v -$(( $(date +%u) - 1 ))d +%y%m%d_w%V)"
    export dorkflow="$mydir/dsync/$(date -v -$(( $(date +%u) - 1 ))d +%y%m%d_w%V)"
    ;;
esac 

alias 'sgrep=echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; grep -n -i -R --exclude=*~ --exclude=*686* --exclude=*.svn* --exclude=*.makesav --exclude=*.make --exclude=*.o --exclude=*.a --exclude=*.so --exclude=*nstallAre* --exclude=*_Dict.cxx'

alias sdu='du -sk * | sort -nr | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e "${size}${unit}\t${fname}"; break; fi; size=$((size/1024)); done; done'
alias sfindroot='find . -name "*\.root" -ls | sort -nk 7 | while read a b c d e f size fname; do for unit in b k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e "${size}${unit}\t${fname}"; break; fi; size=$((size/1024)); done; done'

rcSetupLocal() {
    #export rcSetupSite=~/ATLAS/sw/releases
    export PATHRESOLVER_ALLOWHTTPDOWNLOAD=1
    #source ~/ATLAS/sw/rcSetup/2.4.15/rcSetup.sh -d Base,2.4.15
    source ~/ATLAS/sw/rcSetup/AnalysisBase/2.4.15/RootCore/scripts/setup.sh
    export PATH=$PATH:$ROOTCOREDIR/../pennSoftLepton/macros
    export me=$ROOTCOREDIR/../.
}
